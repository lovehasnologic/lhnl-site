// -----------------------------------------------------------------------------
// Table of Contents
//
// - Extends
// - Labels
// - Text Inputs
// - Booleans
// - Select Menus
//
//  NOTES:
//  [1] The font size of inputs is set to render at 16px. This keeps the page
//      from zooming in on mobile devices when a field is focused.
//
// -----------------------------------------------------------------------------

// -----------------------------------------------------------------------------
// !-- Extends
// -----------------------------------------------------------------------------

%input--text {
  @include input-appearance;
  font-family: map-get($body, font);
  font-size: rem(map-get($input, fontSize)); // [1]
  line-height: 1;
  width: 100%;
  margin: 0;
  padding: map-get($input, spacing);
  color: map-get($input, color);
  border: map-get($borderWidth, thin) solid map-get($input, borderColor);
  background: map-get($input, bg);

  &::placeholder {
    color: map-get($input, color);
  }

  &:focus {
    color: map-get($input, color--focus);
    border-color: map-get($input, color--focus);
    outline: none;
    box-shadow: none;
  }

  &[disabled] {
    cursor: not-allowed;
    opacity: .5;
  }

  [data-useragent*="WebKit"] & {
    &::-webkit-input-placeholder {
      position: relative;
      top: pem(2px, map-get($input, fontSize)); // [1]
    }
  }

  .field--error & {
    // placeholder
  }
}

%labels {
  font-size: rem(map-get($input, fontSize)*.8);
  display: block;
  margin: 0 0 map-get($input, spacing);
}

// -----------------------------------------------------------------------------
// !-- Labels
// -----------------------------------------------------------------------------
/*doc
---
title: Labels
name: 01-form-labels
category: Atoms - Form
---

Labels will be generated automatically when using Simple Form. You can set
`required: false` do remove the required label. You can set `label: false` to
output the input with no label.

```haml_example
= simple_form_for :example, url: "#" do |f|
  = f.label :label, "This is a label"
```
*/
// -----------------------------------------------------------------------------

label {
  @extend %labels;
}

.label__required.label__required {
  border-bottom: 0;
}

// -----------------------------------------------------------------------------
// !-- Text Inputs
// -----------------------------------------------------------------------------
/*doc
---
title: Text Inputs
name: form-text-inputs
category: Atoms - Form
---

All simple_form generated text inputs will include the `input--text` class.

```haml_example_table
= simple_form_for :example, url: "#" do |f|
  = f.input :input_1, label: "Text Input", placeholder: "Placeholder Text"

= simple_form_for :example, url: "#" do |f|
  = f.input :input_2, as: :email, label: "Email Input", placeholder: "Placeholder Text"

= simple_form_for :example, url: "#" do |f|
  = f.input :input_3, as: :url, label: "URL Input", placeholder: "Placeholder Text"

= simple_form_for :example, url: "#" do |f|
  = f.input :input_4, as: :tel, label: "Telephone", placeholder: "Placeholder Text"

= simple_form_for :example, url: "#" do |f|
  = f.input :input_5, as: :password, label: "Password Input", placeholder: "Placeholder Text"

= simple_form_for :example, url: "#" do |f|
  = f.input :input_6, as: :search, label: "Search Input", placeholder: "Placeholder Text"

= simple_form_for :example, url: "#" do |f|
  = f.input :input_7, as: :text, label: "Textarea", placeholder: "Placeholder Text"

= simple_form_for :example, url: "#" do |f|
  = f.input :input_8, label: "Optional Field", placeholder: "Placeholder Text", required: false
```
*/
// -----------------------------------------------------------------------------

.input--text {
  @extend %input--text;
  @include scut-padding(n map-get($input, padding));
}

textarea {
  @extend %input--text;
  line-height: 1.4;
  display: block;
  height: (map-get($input, fontSize)*3*1.4) + (map-get($input, spacing)*2); // 3 lines tall, multiplied by line height with padding added
  padding: map-get($input, spacing);
}

[placeholder]:focus::placeholder {
  // placeholder
}

// -----------------------------------------------------------------------------
// !-- Booleans
// -----------------------------------------------------------------------------
/*doc
---
title: Boolean Inputs
name: form-boolean-inputs
category: Atoms - Form
---

Booleans are automatically rendered properly when using Simple Form.

```haml_example_table
= simple_form_for :example, url: "#" do |f|
  = f.input :colors, collection: ["red","yellow","blue"], as: :check_boxes, label: "Label For A Set of Checkboxes"

= simple_form_for :example, url: "#" do |f|
  = f.input :approve, collection: ["yes","no"], as: :radio_buttons, label: "Label For A Set of Radio Buttons"
```
*/
// -----------------------------------------------------------------------------

[type="checkbox"],
[type="radio"] {
  // placeholder
}

.label--boolean {
  // placeholder
}

.label--checkbox {
  // placeholder
}

.label--radio {
  // placeholder
}

// -----------------------------------------------------------------------------
// !-- Select Menus
// -----------------------------------------------------------------------------
/*doc
---
title: Select Menus
name: form-select-menus
category: Atoms - Form
---

Select menus are automatically rendered properly when using Simple Form. This
markup allows us to style the input without javascript using the technique in
[this Gist](https://gist.github.com/mojaray2k/569305b307ff10f44176).

```haml_example_table
= simple_form_for :example, url: "#" do |f|
  = f.input :states, collection: ["hysteria","euphoria","depression"], as: :select, label: "Label For A Select Menu"
```
*/
// -----------------------------------------------------------------------------

.input--select {
  // placeholder

  select {
    // placeholder
  }
}
